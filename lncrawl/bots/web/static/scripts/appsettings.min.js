(function (n, t) {
	"use strict"; function c(n) {
		return `${n.fontSize}, ${n.fontFamily}, ${n.darkMode}, ${n.bgcolor}, ${n.hgcolor}, ${n.lang}, ${n.ttsvoice}, ${n.ttsrate}`
	}

	function l(n) {
		if (n) {
			var t = n.split(","); return t.length < 5 ? null : t[4] === "undefined" || "undefined" == typeof t[4] ? null : {
				fontSize: parseInt(t[0]), fontFamily: t[1], darkMode: t[2] === "true" ? !0 : !1, bgcolor: t[3], hgcolor: t[4], lang: t[5], ttsvoice: parseInt(t[6]), ttsrate: parseFloat(t[7])
			}
		}

		return null
	}

	function a() {
		var t = n.createElement("style"); return t.id = "font_range_slider_style", n.body.appendChild(t), t
	}

	function v(n) {
		var e = ["webkit-slider-runnable-track", "moz-range-track", "ms-track"], o = 100 / (u.length - 1), t = (n - 1) * o, r = "", f, i; for ($(".range-fontsize .range-labels li").removeClass("active selected"), f = $(".range-fontsize .range-labels").find("li:nth-child(" + n + ")"), f.addClass("active selected"), f.prevAll().addClass("selected"), i = 0; i < e.length; i++)r += ".range-fontsize .range {background: linear-gradient(to right, var(--anchor-color) 0%, var(--anchor-color) " + t + "%, transparent " + t + "%, transparent 100%)}", r += ".range-fontsize .range input::-" + e[i] + "{background: linear-gradient(to right, var(--anchor-color) 0%, var(--anchor-color) " + t + "%, #b2b2b2 " + t + "%, #b2b2b2 100%)}"; return r
	}

	function y(n) {
		var t = u.indexOf(n); r.fontRangeInput.val(t + 1).trigger("input")
	}

	function o(n) {
		var t = u.indexOf(n); r.fontRangeSheet.textContent = v(t + 1); r.contentElement.css("font-size", n); t == u.length - 1 ? r.fontPlusBtn.addClass("isDisabled") : t == 0 ? r.fontMinusBtn.addClass("isDisabled") : (r.fontMinusBtn.removeClass("isDisabled"), r.fontPlusBtn.removeClass("isDisabled"))
	}

	function s(n) {
		r.contentElement.removeClass(function (n, t) {
			return (t.match(/(^|\s)font_\S+/g) || []).join(" ")
		}); r.contentElement.addClass(`font_${n}`); $(`input[name=${r.switchFontFamilyInputName}][value=${n}]`).prop("checked", !0)
	}

	function h(n, t) {
		t === !0 ? ($(".action-select a[data-tool='night'] i").removeClass("icon-moon").addClass("icon-sun"), n.find("i").removeClass("icon-moon").addClass("icon-sun"), n.attr("data-content", "Light Theme"), $("html").attr("theme", "dark").attr("bgcolor", i.bgcolor).attr("hgcolor", i.hgcolor)) : ($(".action-select a[data-tool='night'] i").removeClass("icon-sun").addClass("icon-moon"), n.find("i").removeClass("icon-sun").addClass("icon-moon"), n.attr("data-content", "Dark Theme"), $("html").attr("theme", "light").attr("bgcolor", "white").attr("hgcolor", i.hgcolor))
	}

	function p() {
		setTimeout(function () {
			"undefined" != typeof lightNovelVoice && (lightNovelVoice.setRateSelection(i.ttsrate), lightNovelVoice.setVoiceSelection(i.ttsvoice))
		}

			, 1e3)
	}

	function f() {
		Cookies.set("lnusrconf", c(i), {
			secure: !0, expires: 365
		})
	}

	var u = [14, 16, 18, 20, 22, 24, 26, 28], r = {
		fontPlusBtn: $("#fontplus, #svgFontPlus"), fontMinusBtn: $("#fontminus, #svgFontMinus"), fontRangeInput: $(".range-fontsize .range input"), darkModeSwitchBtn: $(".nightmode_switch"), switchFontFamilyInputName: "radioFont", contentElement: $(".chapter-content"), fontRangeSheet: null
	}

		, i = l(Cookies.get("lnusrconf")), e = {
			lnconfig: i, init: function () {
				i || (i = {
					fontSize: 16, fontFamily: "default", darkMode: !1, bgcolor: "black", hgcolor: "purple", lang: "en", ttsvoice: 0, ttsrate: 1
				}

					, f()); r.fontRangeSheet = a(); y(i.fontSize); o(i.fontSize); s(i.fontFamily); p(); r.fontRangeInput.on("input", function () {
						var n = parseInt(this.value - 1), t = u[n]; i.fontSize = t; o(i.fontSize); f()
					})
			}

			, updateTTSConf: function (n, t) {
				i.ttsrate = t; i.ttsvoice = n; f()
			}

			, updateThemeColors: function (n, t) {
				i.bgcolor = n; i.hgcolor = t; f(); h(r.darkModeSwitchBtn, i.darkMode)
			}
		}

		; $(".range-fontsize .range-labels li").on("click", function () {
			var n = $(this).index(); r.fontRangeInput.val(n + 1).trigger("input")

		}); r.fontPlusBtn.on("click", function () {
			var n = u.indexOf(i.fontSize); n + 1 < u.length && (r.fontRangeInput.val(n + 1 + 1).trigger("input"), i.fontSize = u[n + 1], o(i.fontSize), f())

		}); r.fontMinusBtn.on("click", function () {
			var n = u.indexOf(i.fontSize); n - 1 >= 0 && (r.fontRangeInput.val(n + 1 - 1).trigger("input"), i.fontSize = u[n - 1], o(i.fontSize), f())

		}); $(`input[name=${r.switchFontFamilyInputName}]`).change(function () {
			i.fontFamily = this.value; s(i.fontFamily); f()

		}); r.darkModeSwitchBtn.on("click", function () {
			i.darkMode = !i.darkMode; h(r.darkModeSwitchBtn, i.darkMode); f()

		}); return typeof define == "function" && define.amd ? define([], function () {
			return e
		}) : t.lnwSettingsFunc = e, e.init(), e
})(document, window);